#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

{% if cryptogen_orderers_by_org | length > 0 %}
# ---------------------------------------------------------------------------
# "OrdererOrgs" - Definition of organizations managing orderer nodes
# ---------------------------------------------------------------------------
OrdererOrgs:
{% for orderer_org, orderer_instances in cryptogen_orderers_by_org.items() %}
  # ---------------------------------------------------------------------------
  # {{ (orderer_org | from_json).name }}
  # ---------------------------------------------------------------------------
  - Name: {{ (orderer_org | from_json).name }}
    Domain: {{ (orderer_org | from_json).domain }} 
    EnableNodeOUs: false
    
    # ---------------------------------------------------------------------------
    # "Specs"
    # ---------------------------------------------------------------------------      
    # Specs is an array of Spec entries.  Each Spec entry consists of two fields:
    #   - Hostname:   (Required) The desired hostname, sans the domain.
    #   - CommonName: (Optional) Specifies the template or explicit override for
    #                 the CN.  By default, this is the template:
    #
    #                              "Hostname.Domain"
    #
    #                 which obtains its values from the Spec.Hostname and
    #                 Org.Domain, respectively.      
    Specs:
{% for orderer in orderer_instances %}
      - Hostname: {{ hostvars[orderer].inventory_hostname }}
        SANS:
          - {{ hostvars[orderer].ansible_host }}
          - 0.0.0.0
          - localhost
          - 127.0.0.1
          - ::1
{% endfor %}
{% endfor %}
{% endif %}

{% if cryptogen_peers_by_org | length > 0 %}
# ---------------------------------------------------------------------------
# "PeerOrgs" - Definition of organizations managing peer nodes
# ---------------------------------------------------------------------------
PeerOrgs:
{% for peer_org, peer_instances in cryptogen_peers_by_org.items() %}
  # ---------------------------------------------------------------------------
  # {{ (peer_org | from_json).name }}
  # ---------------------------------------------------------------------------
  - Name: {{ (peer_org | from_json).name }}
    Domain: {{ (peer_org | from_json).domain }}
    EnableNodeOUs: false

    # ---------------------------------------------------------------------------
    # "Specs"
    # ---------------------------------------------------------------------------
    # Uncomment this section to enable the explicit definition of hosts in your
    # configuration.  Most users will want to use Template, below
    #
    # Specs is an array of Spec entries.  Each Spec entry consists of two fields:
    #   - Hostname:   (Required) The desired hostname, sans the domain.
    #   - CommonName: (Optional) Specifies the template or explicit override for
    #                 the CN.  By default, this is the template:
    #
    #                              ".Hostname.Domain"
    #
    #                 which obtains its values from the Spec.Hostname and
    #                 Org.Domain, respectively.
    #   - SANS:       (Optional) Specifies one or more Subject Alternative Names
    #                 to be set in the resulting x509. Accepts template
    #                 variables .Hostname, .Domain, .CommonName. IP
    #                 addresses provided here will be properly recognized. Other
    #                 values will be taken as DNS names.
    #                 NOTE: Two implicit entries are created for you:
    #                     - .CommonName
    #                     - .Hostname
    # ---------------------------------------------------------------------------
    Specs:
{% for peer in peer_instances %}
      - Hostname: {{ hostvars[peer].inventory_hostname }}
        SANS:
          - {{ hostvars[peer].ansible_host }}
          - 0.0.0.0
          - localhost
          - 127.0.0.1
          - ::1
{% endfor %}

    # ---------------------------------------------------------------------------
    # "Users"
    # ---------------------------------------------------------------------------
    Users:
      # Count: The number of user accounts _in addition_ to Admin
      Count: 1
      Specs:
{% for user_org, user_instances in cryptogen_users_by_org.items() %}
{% if peer_org == user_org %}
{% for user in user_instances %}
        - Name: {{ hostvars[user].inventory_hostname }}
          HSM: false
{% if hostvars[user].fsc_token_issuer_identities is defined %}
{% for issuer_identity in hostvars[user].fsc_token_issuer_identities %}
        - Name: {{ issuer_identity.id }}
          HSM: false
{% endfor %}
{% endif %}
{% if hostvars[user].fsc_token_auditor_identities is defined %}
{% for auditor_identity in hostvars[user].fsc_token_auditor_identities %}
        - Name: {{ auditor_identity.id }}
          HSM: false
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}