#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

- name: Ensure keys directory exists
  ansible.builtin.file:
    path: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}"
    state: directory
    mode: "0o750"

- name: Generate ECDSA key
  vars:
    openssl_private_key_path: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}/{{ loadgen_admin_priv_key_file }}"
    openssl_cert_path: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}/{{ loadgen_admin_pub_key_file }}"
    openssl_csr_path: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}/cert.csr"
  ansible.builtin.include_role:
    name: hyperledger.fabricx.openssl
    tasks_from: generate_ecdsa_key
  when:
    - inherit_endorser is undefined
    - organization is undefined
    - loadgen_key_scheme == 'ECDSA'

- name: Transfer the Fabric-X Loadgen Public Key
  ansible.builtin.copy:
    src: "{{ loadgen_cryptogen_artifact_build_dir }}/crypto/peerOrganizations/{{ organization.domain }}/users/{{ user }}@{{ organization.domain }}/msp/signcerts/{{ user }}@{{ organization.domain }}-cert.pem"
    dest: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}/{{ loadgen_admin_pub_key_file }}"
    mode: "0o644"
  loop: "{{ organization.users }}"
  loop_control:
    loop_var: user
  when:
    - inherit_endorser is undefined
    - organization is defined

- name: Transfer the Fabric-X Loadgen Private Key
  ansible.builtin.copy:
    src: "{{ loadgen_cryptogen_artifact_build_dir }}/crypto/peerOrganizations/{{ organization.domain }}/users/{{ user }}@{{ organization.domain }}/msp/keystore/priv_sk"
    dest: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}/{{ loadgen_admin_priv_key_file }}"
    mode: "0o644"
  loop: "{{ organization.users }}"
  loop_control:
    loop_var: user
  when:
    - inherit_endorser is undefined
    - organization is defined

- name: Transfer the endorser public key
  vars:
    _endorser: "{{ hostvars[inherit_endorser] }}"
    _fqdn: "{{ _endorser.organization.domain }}"
    _pub_key_cert: "{{ _endorser.inventory_hostname }}@{{ _fqdn }}-cert.pem"
  ansible.builtin.copy:
    src: "{{ loadgen_cryptogen_artifact_build_dir }}/crypto/peerOrganizations/{{ _fqdn }}/users/{{ _endorser.inventory_hostname }}@{{ _fqdn }}/msp/signcerts/{{ _pub_key_cert }}"
    dest: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}/{{ loadgen_admin_pub_key_file }}"
    mode: "0o644"
  when:
    - inherit_endorser is defined

- name: Transfer the endorser private key
  vars:
    _endorser: "{{ hostvars[inherit_endorser] }}"
    _fqdn: "{{ _endorser.organization.domain }}"
  ansible.builtin.copy:
    src: "{{ loadgen_cryptogen_artifact_build_dir }}/crypto/peerOrganizations/{{ _fqdn }}/users/{{ _endorser.inventory_hostname }}@{{ _fqdn }}/msp/keystore/priv_sk"
    dest: "{{ loadgen_remote_config_dir }}/{{ loadgen_key_scheme }}/{{ loadgen_admin_priv_key_file }}"
    mode: "0o644"
  when:
    - inherit_endorser is defined
