#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

- name: Build crypto material
  hosts: localhost
  tasks:
    - name: Define the Hyperledger Fabric-X orderer organizations
      vars:
        org_domain: "{{ hostvars[orderer].organization.domain }}"
        org_name: "{{ hostvars[orderer].organization.name }}"
        orderer_info:
          name: "{{ orderer }}"
      ansible.builtin.set_fact:
        cryptogen_orderers_by_org: >-
          {{
            cryptogen_orderers_by_org | default({}) | combine({
              org_domain: {
                'name': org_name,
                'domain': org_domain,
                'orderers': (cryptogen_orderers_by_org | default({})).get(org_domain, {}).get('orderers', []) + [orderer_info]
              }
            })
          }}
      loop: >-
        {{
          groups['all'] | default([]) | map('extract', hostvars) | selectattr('organization', 'defined') |
          selectattr('organization.role', 'defined') | selectattr('organization.role', '==', 'orderer') | map(attribute='inventory_hostname')
        }}
      loop_control:
        loop_var: orderer
    - name: Define the Hyperledger Fabric-X peer organizations
      vars:
        org_domain: "{{ hostvars[peer].organization.domain }}"
        org_name: "{{ hostvars[peer].organization.name }}"
        peer_info:
          name: "{{ peer }}"
      ansible.builtin.set_fact:
        cryptogen_peers_by_org: >-
          {{
            cryptogen_peers_by_org | default({}) | combine({
              org_domain: {
                'name': org_name,
                'domain': org_domain,
                'peers': (cryptogen_peers_by_org | default({})).get(org_domain, {}).get('peers', []) + [peer_info]
              }
            })
          }}
      loop: >-
        {{
          groups['all'] | default([]) | map('extract', hostvars) | selectattr('organization', 'defined') |
          selectattr('organization.role', 'defined') | selectattr('organization.role', '==', 'peer') | map(attribute='inventory_hostname')
        }}
      loop_control:
        loop_var: peer
    - name: Add users to the Hyperledger Fabric-X peer organizations
      vars:
        org_domain: "{{ hostvars[peer].organization.domain }}"
        org_name: "{{ hostvars[peer].organization.name }}"
        users: "{{ hostvars[peer].organization.users }}"
      ansible.builtin.set_fact:
        cryptogen_peers_by_org: >-
          {{
            cryptogen_peers_by_org | default({}) | combine({
              org_domain: {
                'name': org_name,
                'domain': org_domain,
                'users': (cryptogen_peers_by_org | default({})).get(org_domain, {}).get('users', []) + users,
                'peers': (cryptogen_peers_by_org | default({})).get(org_domain, {}).get('peers', [])
              }
            })
          }}
      loop: >-
        {{
          groups['all'] | default([]) | map('extract', hostvars) | selectattr('organization', 'defined') |
          selectattr('organization.users', 'defined') | map(attribute='inventory_hostname')
        }}
      loop_control:
        loop_var: peer
    - name: Generate crypto-config.yaml
      ansible.builtin.include_role:
        name: hyperledger.fabricx.cryptogen
        tasks_from: config/build
    - name: Install cryptogen as binary for Fabric-X
      ansible.builtin.include_role:
        name: hyperledger.fabricx.cryptogen
        tasks_from: bin/install
      when:
        - cryptogen_use_bin is defined
        - cryptogen_use_bin
    - name: Generate the crypto material with cryptogen
      ansible.builtin.include_role:
        name: hyperledger.fabricx.cryptogen
        tasks_from: start
